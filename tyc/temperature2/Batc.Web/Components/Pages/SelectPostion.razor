@page "/confirm/{id}"
@using System.Globalization
@using Microsoft.AspNetCore.Components.Web
@using Batc.Web.Models
@inject Batc.Web.Services.AppState AppState
@inject NavigationManager Nav
@inject Batc.Web.Services.VisitLogService VisitLog
@rendermode InteractiveServer

<header class="topbar">
  <div class="brand">
    <img src="images/logo.png" alt="BATC" />
    <span>BATC</span>
    <button class="back-btn" title="Back" @onclick="GoBack">
      <img src="images/back.png" alt="Back" />
      <span>Back</span>
    </button>
  </div>

  <div class="user-section">
    <button class="icon-btn settings-btn" @onclick="ShowHelp">
      <img src="images/setting.png" alt="Settings" width="20" height="20" />
    </button>
    <button class="icon-btn notification-btn">
      <img src="images/notification.png" alt="Notifications" width="20" height="20" />
    </button>

    <div class="user">
      <img src="images/醫生_1.png" alt="Dr. Wang" class="avatar" />
      <span>Dr. Wang</span>
    </div>

    <button class="logout-btn" @onclick="Logout">Log out</button>
  </div>
</header>

@if (showHelpModal)
{
    <div class="modal-overlay" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); z-index: 1000; display: flex; align-items: center; justify-content: center;" @onclick="HideHelp">
        <div class="modal-content" style="background: white; padding: 20px; border-radius: 8px; max-width: 500px; margin: 20px; box-shadow: 0 4px 20px rgba(0,0,0,0.3);" @onclick:stopPropagation="true">
            <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px;">
                <h3 style="margin: 0; color: #000 ;">使用說明</h3>
                <button @onclick="HideHelp" style="background: none; border: none; font-size: 24px; cursor: pointer; color: #666;">&times;</button>
            </div>
            
            <div style="line-height: 1.2; color: #555;">
                <p>• 點 Front/Back 圖片上 <strong>紅點</strong>選擇部位</p>
                <p>   =>左側 Recent Visits 會新增「日期＋部位」。</p>
                <p>• 按<b>Confirm：</b>會把座標與部位帶到 <code>連接設備與詳細詳細照射中心點</code>頁面。</p>
                <p>• 按<b>Clean : </b> 可清除與重選部位。</p>
         
                
         
            </div>
        </div>
    </div>
}

@{
    var p = (string.IsNullOrWhiteSpace(Id)
                ? AppState.Patients?.FirstOrDefault()
                : AppState.Patients?.FirstOrDefault(x => x.Id == Id))
            ?? new Patient {
                Name = "James Wilson", Id = "PAT-2023-1296", Age = 35, Gender = "Male",
                BloodType = "A", Height = 178, Weight = 75, AvatarUrl = "images/病人_1.png"
            };
    var avatar = string.IsNullOrWhiteSpace(p.AvatarUrl) ? "images/病人_1.png" : p.AvatarUrl;
}

<main class="wrap">
  <div class="grid">
    <!-- 左側 -->
    <section class="card ">
      <div class="header">Patient Details</div>
      <div class="body">
        <div class="p-info">
            <!-- 應該要去讀取到資料庫(patient)顯示已經有加入資料的病人-->
          <img class="p-avatar-img" src="@avatar" alt="@p.Name" />
          <div>
            <div class="p-name">@p.Name</div>
            <div class="p-id">ID: @p.Id</div>
          </div>
        </div>

        <div class="detail-grid">
            <div><label>Age</label><span>@p.Age</span></div>
            <div><label>Gender</label><span>@p.Gender</span></div>
            <div><label>Blood Type</label><span>@p.BloodType</span></div>
            <div><label>Height(cm)</label><span>@p.Height</span></div>
            <div><label>Weight(kg)</label><span>@p.Weight</span></div>
        </div>


        <div class="visits"> 
          <h4>Recent Visits</h4>
          <ul>
            @if (!VisitLog.Visits.Any())
            {
                <li><span class="dot"></span><span>No records yet</span></li>
            }
            else
            {
                @foreach (var v in VisitLog.Visits.OrderByDescending(v => v.Date))
                {
                    <li><span class="dot"></span>
                        <span>@v.Date.ToString("MMM dd, yyyy") – @v.Label</span>
                    </li>
                }
            }
          </ul>
        </div>

      </div>
    </section>

    <!-- 右側 -->
    <section class="card viz">
      <div class="header">Body Visualization</div>
      <div class="body">
        <div class="stage">
          <!-- Front -->
          <div class="figure-wrap">
            <div class="caption">Front</div>
            <div class="image-canvas">
              <img src="images/body.png" alt="Front" />
              @foreach (var pt in FrontPreset)
              {
                var key = KeyFor(pt, true);
                <button class="dot-btn"
                        title="@pt.Label"
                        style="left:@(pt.X - DotR)px; top:@(pt.Y - DotR)px"
                        disabled="@(selectionLocked && key != selectedKey)"
                        @onclick="() => SelectPreset(pt, true)">
                </button>
              }
            </div>
          </div>

          <!-- Back -->
          <div class="figure-wrap">
            <div class="caption">Back</div>
            <div class="image-canvas">
              <img src="images/body.png" alt="Back" />
              @foreach (var pt in BackPreset)
              {
                var key = KeyFor(pt, false);
                <button class="dot-btn"
                        title="@pt.Label"
                        style="left:@(pt.X - DotR)px; top:@(pt.Y - DotR)px"
                        disabled="@(selectionLocked && key != selectedKey)"
                        @onclick="() => SelectPreset(pt, false)">
                </button>
              }
            </div>
          </div>
        </div>

        <div class="toolbar toolbar-split">
          <div class="toolbar-left"></div>
          <div class="toolbar-right" style="display:flex;gap:10px;">
            <button class="btn clean " @onclick="Clean" disabled="@(!selectionLocked)">Clean</button>
            <button class="btn confirm" @onclick="Confirm" disabled="@(!selectionLocked)">Confirm</button>
          </div>
        </div>
      </div>
    </section>
  </div>
</main>
@code {
  [Parameter] public string? Id { get; set; }
  private Patient? patient;

  protected override void OnParametersSet()
    {
    patient = AppState.Patients?.FirstOrDefault(p => p.Id == Id);
    }

  // UI
  private bool showHelpModal = false;
  private void GoBack() => Nav.NavigateTo($"/patient/{Uri.EscapeDataString(Id ?? "")}");
  private void Logout() => Nav.NavigateTo("/");

  private void ShowHelp()
{
    showHelpModal = true;
}

private void HideHelp()
{
    showHelpModal = false;
}
  // 畫布基準
  private const double CanvasW = 280, CanvasH = 380;
  private const double DotR = 7;

  // 預設紅點（示例，可換成你的 10 顆真實座標）
  private static readonly P[] FrontPreset = new[]
  {
    new P(110,115,"left shoulder"),
    new P(175,115,"right shoulder"),
    new P( 70,170,"left upper arm"),
    new P(215,170,"right upper arm"),
    new P(120,250,"left knee"),
    new P(165,250,"right knee"),
    new P(113,290,"left ankle"),
    new P(173,290,"right ankle"),
  };
  private static readonly P[] BackPreset = new[]
  {
    new P(140,140,"upper back"),
    new P(140,200,"mid back"),
  };

  // 最近新增紀錄
  private readonly List<Visit> visits = new();

  // 本次選擇（帶去 /prediction）
  private (double nx, double ny, bool isFront)? lastPoint;

  // 一次只能點一顆：鎖定狀態 & 被選到的 key
  private bool selectionLocked = false;
  private string? selectedKey = null;

  // 為了 Clean 能移除剛剛新增那一筆
  private int? lastVisitIndex = null;
  private string? lastVisitLabel = null;

  private static string KeyFor(P pt, bool isFront) => $"{(isFront ? "F" : "B")}:{pt.X},{pt.Y}";

  private void SelectPreset(P pt, bool isFront)
  {
    var key = KeyFor(pt, isFront);
    if (selectionLocked && key != selectedKey) return; // 已鎖定且不是同一顆 → 忽略

    if (!selectionLocked)
    {
      visits.Add(new Visit { Label = pt.Label, Date = DateTime.Today });
      lastVisitIndex = visits.Count - 1;
      lastVisitLabel = pt.Label;
      selectionLocked = true;
      selectedKey = key;
    }

    lastPoint = (pt.X / CanvasW, pt.Y / CanvasH, isFront);
  }

  private void Clean()
  {
    selectionLocked = false;
    selectedKey = null;
    lastPoint = null;

    if (lastVisitIndex.HasValue && lastVisitIndex.Value >= 0 && lastVisitIndex.Value < visits.Count)
    {
      if (visits[lastVisitIndex.Value].Label == lastVisitLabel)
        visits.RemoveAt(lastVisitIndex.Value);
    }
    lastVisitIndex = null;
    lastVisitLabel = null;
  }
 
protected override void OnInitialized()
    {
        // 任何頁面新增紀錄，這裡會即時刷新
        VisitLog.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        VisitLog.OnChange -= StateHasChanged;
    }
   

private void OnDotClick(double nx, double ny, bool front, string label)
{
    lastPoint = (nx, ny, front);
    lastVisitLabel = label?.Trim();

    if (!string.IsNullOrWhiteSpace(lastVisitLabel))
        VisitLog.Add(lastVisitLabel!, DateTime.Now);

    StateHasChanged(); // 讓左邊清單立刻更新
}


 private void Confirm()
{
    if (!lastPoint.HasValue) return;

    var (nx, ny, front) = lastPoint.Value;
    var rawLabel = (lastVisitLabel ?? "").Trim();

    // 寫進共用服務，讓其他頁能看到
    if (!string.IsNullOrEmpty(rawLabel))
    {
        // 若你已在「點紅點」時寫入 VisitLog，這裡就不用再 Add，避免重複
        var last = VisitLog.Visits.LastOrDefault();
        if (last == null || !string.Equals(last.Label, rawLabel, StringComparison.Ordinal))
            VisitLog.Add(rawLabel, DateTime.Now);
    }

    var lab = Uri.EscapeDataString(rawLabel);
    var pid = Uri.EscapeDataString(Id ?? "");

    // ✅ 把 id 放在路由，其他參數用 QueryString
    Nav.NavigateTo($"/connect-device/{pid}?label={lab}&front={(front ? 1 : 0)}&x={nx:F4}&y={ny:F4}");
}

  private record P(double X, double Y, string Label);
  private class Visit { public string Label { get; set; } = ""; public DateTime Date { get; set; } }
}
