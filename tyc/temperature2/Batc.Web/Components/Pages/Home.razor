@page "/"
@page "/login"
@rendermode InteractiveServer
@using Batc.Web.Services
@using System.ComponentModel.DataAnnotations
@using System.Security.Claims
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@inject IUsersService UsersService
@inject IHttpContextAccessor Http
@inject NavigationManager Nav
@inject CurrentUserState UserState

<div class="login-container">
    <div class="left-section">
      <div class="logo-stack">
        <img src="images/logo.png" alt="BATC Logo" class="logo-image" />
        <div class="logo-text">BATC</div>
      </div>
    </div>

    <!-- 保留原本結構與樣式 -->
    <EditForm class="right-section" 
            style="margin:0;
                    min-height:100vh;
                    display:grid;
                    place-items:center;
                    box-sizing:border-box;
                    padding:0 4vw;"
            Model="vm" OnValidSubmit="SignInAsync">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-card">
            <h2>Sign In</h2>

            <label>ID</label>
            <input type="number" @bind="vm.LoginId" @bind:event="oninput"
                   min="1" step="1" placeholder="Enter your ID" />

            <label>Role</label>
            <InputSelect 
                style="position:static;
                        transform:none;
                        margin:0;
                        width:clamp(560px);
                        max-width:100%;"
            @bind-Value="vm.RoleId" class="form-select">
                <option value="1">Doctor</option>
                <option value="2">Nurse</option>
                <option value="3">Admin</option>
            </InputSelect>

            <button type="submit" style="pointer-events:auto; z-index:999;">Sign In</button>

            <p>Don't have an account? <NavLink href="/register" class="no-underline">Register here</NavLink></p>

            @if (!string.IsNullOrEmpty(err))
            {
                <div class="text-danger" style="margin-top:.5rem;">@err</div>
            }
        </div>
    </EditForm>
</div>

@code {
    private class LoginVm
    {
        [Required(ErrorMessage = "請輸入 Login ID")]
        public int? LoginId { get; set; }

        [Required(ErrorMessage = "請選擇角色")]
        [Range(1, 3, ErrorMessage = "角色不正確")]
        public int? RoleId { get; set; } = 1;
    }

    LoginVm vm = new();
    string? err;
    bool busy;

    private async Task SignInAsync()
    {
        if (busy) return;
        busy = true;
        err = null;

        try
        {
            // 1) 查使用者
            var user = await UsersService.GetByLoginAndRoleAsync(vm.LoginId!.Value, vm.RoleId!.Value);
            if (user is null)
            {
                err = "登入失敗：ID 或角色不正確。";
                return; // 留在登入頁
            }

            // 2) 交給真正的 HTTP 端點去簽發 Cookie（避免在 SignalR 事件改 Header）
            Nav.NavigateTo($"/auth/signin?loginId={vm.LoginId!.Value}&roleId={vm.RoleId!.Value}", forceLoad: true);
        }
        catch (Exception ex)
        {
            err = $"登入失敗：{ex.Message}";
        }
        finally
        {
            busy = false;
        }
    }
}

@if (UserState?.IsAuthenticated == true)
{
  <div class="user-card">
    #@UserState.LoginID @UserState.Username (Role @UserState.RoleID)
  </div>
}
