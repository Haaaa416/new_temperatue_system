@page "/perdicts"
@using System.Globalization
@using Microsoft.AspNetCore.Components.Web
@using Batc.Web.Models
@inject Batc.Web.Services.AppState AppState
@inject NavigationManager Nav
@rendermode InteractiveServer

<header class="topbar">
  <div class="brand">
    <img src="images/logo.png" alt="BATC" />
    <span>BATC</span>
    <button class="back-btn" title="Back" @onclick="GoBack">
      <img src="images/back.png" alt="Back" />
      <span>Back</span>
    </button>
  </div>

  <div class="user-section">
    <button class="icon-btn settings-btn" @onclick="ToggleHelp">
      <img src="images/setting.png" alt="Settings" width="20" height="20" />
    </button>
    <button class="icon-btn notification-btn">
      <img src="images/notification.png" alt="Notifications" width="20" height="20" />
    </button>

    <div class="user">
      <img src="images/醫生_1.png" alt="Dr. Wang" class="avatar" />
      <span>Dr. Wang</span>
    </div>

    <button class="logout-btn" @onclick="Logout">Log out</button>
  </div>
</header>

@if (showHelp)
{
  <div class="modal" @onclick="ToggleHelp">
    <div class="modal-card" @onclick:stopPropagation="true">
      <div class="modal-head">
        <strong>使用說明</strong>
        <button class="x" @onclick="ToggleHelp">×</button>
      </div>
      <div class="modal-body">
        <p>點 Front/Back 的<strong>紅點</strong>選擇部位，左側 Recent Visits 會新增「日期＋部位」。</p>
        <p>按 <b>Confirm</b> 會把座標與部位帶到 <code>/prediction</code>；<b>Clean</b> 可清除與重選。</p>
      </div>
    </div>
  </div>
}

@{
    var p = (string.IsNullOrWhiteSpace(Id)
                ? AppState.Patients?.FirstOrDefault()
                : AppState.Patients?.FirstOrDefault(x => x.Id == Id))
            ?? new Patient {
                Name = "James Wilson", Id = "PAT-2023-1296", Age = 35, Gender = "Male",
                BloodType = "A", Height = 178, Weight = 75, AvatarUrl = "images/病人_1.png"
            };
    var avatar = string.IsNullOrWhiteSpace(p.AvatarUrl) ? "images/病人_1.png" : p.AvatarUrl;
}

<main class="wrap">
  <div class="grid">
    <!-- 左側 -->
    <section class="card">
      <div class="header">Patient Details</div>
      <div class="body">
        <div class="p-info">
            <!-- 應該要去讀取到資料庫(patient)顯示已經有加入資料的病人-->
          <img class="p-avatar-img" src="@avatar" alt="@p.Name" />
          <div>
            <div class="p-name">@p.Name</div>
            <div class="p-id">ID: @p.Id</div>
          </div>
        </div>

        <div class="detail-grid">
            <div><label>Age</label><span>@p.Age</span></div>
            <div><label>Gender</label><span>@p.Gender</span></div>
            <div><label>Blood Type</label><span>@p.BloodType</span></div>
            <div><label>Height(cm)</label><span>@p.Height</span></div>
            <div><label>Weight(kg)</label><span>@p.Weight</span></div>
        </div>
        <div class="postion-model">
            <button class="btn" @onclick="Start" >Model 1</button>
            <button class="btn" @onclick="Start" >Model 2</button>
            <button class="btn" @onclick="Start" >Model 3</button>
            <button class="btn" @onclick="Start" >Model 4</button>
            <button class="btn" @onclick="Start" >Model 5</button>
            <button class="btn" @onclick="Start" >Model 6</button>
            <button class="btn" @onclick="Start" >Model 7</button>
            <button class="btn" @onclick="Start" >Model 8</button>
            <button class="btn" @onclick="Start" >Model 9</button>
            <button class="btn" @onclick="Start" >Model 10</button>
            <button class="btn" @onclick="Start" >Model 11</button>
            <button class="btn" @onclick="Start" >Model 12</button>
        </div>
        <div class=" select-perdict">
            <h4>Allow data collection for model training ?</h4>
            <div class="yes-no">
                <select>yes or no</select>
            </div>
        </div>
      </div>
    </section>

    <!-- 右側 -->
    <section class="card-viz">
        <div class="body">
            <div class="wf-cz">
                <div class="wf-title">EEG Waveform - CZ</div>
                    <div class="wf-row">
                      <div class="wf-chart"></div>
                    </div>
            </div>
            <div class="wf-fz">
                <div class="wf-title">EEG Waveform - FZ</div>
                    <div class="wf-row">
                      <div class="wf-chart"></div>
                    </div>
            </div>
            <div class="real-time">
                <div class="wf-title">EEG Waveform - CZ</div>
                    <div class="wf-row">
                      <div class="wf-chart"></div>
                    </div>
            </div>
        </div>
    </section>

     <!-- 右：Waveform -->
    <section class="card-waveform">
      <div class="header">Waveform</div>
      <div class="body">
        <div class="wf-block">
          <div class="wf-title">EEG Waveform - CZ</div>
          <div class="wf-row">
            <div class="wf-chart"></div>
            <div class="wf-knobs">
              <div class="knob">
                <div class="num">MAX</div>
                <input type="text" value="50" />
                <div class="num">MIN</div>
                <input type="text" value="-50" />
              </div>
            </div>
           </div>

          <div class="wf-title">EEG Waveform - FZ</div>
          <div class="wf-row">
            <div class="wf-chart"></div>
            <div class="wf-knobs">
              <div class="knob">
                <div class="num">MAX</div>
                <input type="text" value="50" />
                <div class="num">MIN</div>
                <input type="text" value="-50" />
              </div>
            </div>
           </div>
           <button class="btn">SETTING</button>
         </div>


         <div class="wf-controls">
           <select class="port">
             <option>USB COMB4</option>
           </select>
           <button type="button" class="search" @onclick="Search" aria-label="Search">
              <img src="/images/search.png" alt="" width="20" height="20" />
           </button>
           <button class="btn" title="Connect">CONNECT</button>
         </div>
         <div class="status">COM Status : Recording <span style="color:#16a34a;margin-top: 20px;">●</span></div>
         <div class="start-action"> 
           <button class="btn-primary" @onclick="Start" >Start</button>
         </div>
       </div>
     </section>
   </div>
</main>


@code {
  // ---------- Query 參數與頁面參數 ----------
  [Parameter] public string? Id { get; set; }

  [SupplyParameterFromQuery(Name="x")]     public double? qx { get; set; }
  [SupplyParameterFromQuery(Name="y")]     public double? qy { get; set; }
  [SupplyParameterFromQuery(Name="front")] public int?    qFront { get; set; }
  [SupplyParameterFromQuery(Name="label")] public string? qLabel { get; set; }

  // ---------- UI 狀態 ----------
  private bool showHelp;
  private void ToggleHelp() => showHelp = !showHelp;
  private void GoBack()  => Nav.NavigateTo("/patients");   // ← 統一只留一個
  private void Logout()  => Nav.NavigateTo("/");
  private void Search()  => Nav.NavigateTo("/");
  private void Start()  => Nav.NavigateTo("/patients"); 
  // 最近紀錄/清理用到的欄位
  private readonly List<Visit> visits = new();

  // ---------- 病人資料（如果要用變數綁 UI）----------
  private Patient? patient;

  // ---------- 視覺化用常數/欄位 ----------
  private const double ImgW = 280, ImgH = 380;
  private const int FrameW = 360, FrameH = 360;
  private double scale = 2.0;

  private const int RedW = 64, RedH = 64;
  private const double RedTipYRatio = 0.78;
  private double RedTipY => RedH * RedTipYRatio;

  private double cx, cy;         // 中心 (原圖座標)
  private double redX, redY;     // 紅點
  private bool dragging;

  private bool usingRegion;
  private string? zoomImagePath;

  // 注意：這兩個 Dictionary 一定要在 @code 裡，否則會出現 RZ9980
  private static readonly Dictionary<string,string> RegionMapFront = new(StringComparer.OrdinalIgnoreCase) {
    ["left shoulder"]   = "images/left-shoulder.png",
    ["right shoulder"]  = "images/right-shoulder.png",
    ["left upper arm"]  = "images/left-upper-arm.png",
    ["right upper arm"] = "images/right-upper-arm.png",
    ["left knee"]       = "images/left-knee.png",
    ["right knee"]      = "images/right-knee.png",
    ["left ankle"]      = "images/left-ankle.png",
    ["right ankle"]     = "images/right-ankle.png",
  };
  private static readonly Dictionary<string,string> RegionMapBack = new(StringComparer.OrdinalIgnoreCase) {
    ["upper back"]      = "images/upper-back.png",
    ["mid back"]        = "images/mid-back.png",
  };

  // 顯示樣式
  protected string ZoomStyle {
    get {
      if (usingRegion && !string.IsNullOrEmpty(zoomImagePath))
        return $"width:{FrameW}px;height:{FrameH}px;background-image:url('{zoomImagePath}');background-repeat:no-repeat;background-size:contain;background-position:center center;";
      var bgW = ImgW * scale; var bgH = ImgH * scale;
      var posX = -(cx * scale - FrameW / 2.0);
      var posY = -(cy * scale - FrameH / 2.0);
      return $"width:{FrameW}px;height:{FrameH}px;background-image:url('images/body.png');background-repeat:no-repeat;background-size:{bgW}px {bgH}px;background-position:{posX:F1}px {posY:F1}px;";
    }
  }
  protected double CenterX => FrameW / 2.0;
  protected double CenterY => FrameH / 2.0;
  protected double RedScreenX => usingRegion ? CenterX : (redX * scale - (cx * scale - FrameW / 2.0));
  protected double RedScreenY => usingRegion ? CenterY : (redY * scale - (cy * scale - FrameW / 2.0));

  // 用不同名稱避免與 qLabel 衝突
  private string labelText = string.Empty;
  private bool isFront;

  // ---------- 只留「一個」 OnParametersSet，統一初始化 ----------
  protected override void OnParametersSet()
  {
    // 病人
    patient = string.IsNullOrWhiteSpace(Id)
      ? AppState.Patients?.FirstOrDefault()
      : AppState.Patients?.FirstOrDefault(p => p.Id == Id);

    // Query 參數
    isFront   = (qFront ?? 1) == 1;
    labelText = qLabel ?? string.Empty;

    // 視覺化初始化
    var map = isFront ? RegionMapFront : RegionMapBack;
    usingRegion = !string.IsNullOrWhiteSpace(labelText) && map.TryGetValue(labelText, out zoomImagePath);

    if (usingRegion)
    {
      redX = ImgW / 2; redY = ImgH / 2;
      cx = redX; cy = redY;
    }
    else
    {
      cx   = Math.Clamp((qx ?? 0.5) * ImgW, 0, ImgW);
      cy   = Math.Clamp((qy ?? 0.5) * ImgH, 0, ImgH);
      redX = cx; redY = cy;
    }
  }

  // ---------- 互動處理 ----------
  private void RefineCenter(MouseEventArgs e)
  {
    if (usingRegion) return;
    var px = (e.OffsetX - FrameW / 2.0) / scale + cx;
    var py = (e.OffsetY - FrameH / 2.0) / scale + cy;
    cx = Math.Clamp(px, 0, ImgW);
    cy = Math.Clamp(py, 0, ImgH);
  }

  private void StartDrag(MouseEventArgs e) => dragging = true;
  private void EndDrag() => dragging = false;

  private void OnMove(MouseEventArgs e)
  {
    if (!dragging) return;
    if (usingRegion)
    {
      redX = ImgW * e.OffsetX / FrameW;
      redY = ImgH * e.OffsetY / FrameH;
    }
    else
    {
      var px = (e.OffsetX - FrameW / 2.0) / scale + cx;
      var py = (e.OffsetY - FrameH / 2.0) / scale + cy;
      redX = Math.Clamp(px, 0, ImgW);
      redY = Math.Clamp(py, 0, ImgH);
    }
  }

  private void Finish()
  {
    var nx = redX / ImgW; var ny = redY / ImgH;
    Console.WriteLine($"final target: x={nx:F4}, y={ny:F4}, label={labelText}");
    // TODO: 後續處理（例如 API 呼叫）
  }

  // 小型 record/class
  private record P(double X, double Y, string Label);
  private class Visit { public string Label { get; set; } = ""; public DateTime Date { get; set; } }
}