@page "/patients"
@using Batc.Web.Models
@using Batc.Web.Components.Pages
@inject Batc.Web.Services.AppState AppState
@inject NavigationManager Nav
@rendermode InteractiveServer

<header class="topbar">
  <div class="brand">
    <img src="images/logo.png" alt="BATC" />
    <span>BATC</span>
  </div>
  <div class="user-section">
    <button class="icon-btn settings-btn" @onclick="ShowHelp">
      <img src="images/setting.png" alt="Settings" width="20" height="20" />
    </button>
    
    <button class="icon-btn notification-btn">
      <img src="images/notification.png" alt="Notifications" width="20" height="20" />
    </button>
    
    <div class="user-info">
      <img src="images/醫生_1.png" alt="Dr. Wang" class="user-avatar" />
      <span class="user-name">Dr. Wang</span>
    </div>
    
    <button class="logout-btn" @onclick="Logout">Log out</button>
  </div>
</header>

<!-- 說明彈出視窗 -->
@if (showHelpModal)
{
    <div class="modal-overlay" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); z-index: 1000; display: flex; align-items: center; justify-content: center;" @onclick="HideHelp">
        <div class="modal-content" style="background: white; padding: 20px; border-radius: 8px; max-width: 500px; margin: 20px; box-shadow: 0 4px 20px rgba(0,0,0,0.3);" @onclick:stopPropagation="true">
            <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px;">
                <h3 style="margin: 0; color: #333;">使用說明</h3>
                <button @onclick="HideHelp" style="background: none; border: none; font-size: 24px; cursor: pointer; color: #666;">&times;</button>
            </div>
            
            <div style="line-height: 1.6; color: #555;">
                <h4 style="color: #333; margin-top: 0;">功能說明：</h4>
                <p>• <strong>左側區域：</strong>輸入完病患資料點擊ADD後會自動顯示病患資料以及系統生成的ID</p>
                
                <h4 style="color: #333;">輸入限制：</h4>
                <p>• <strong>出生年月日：</strong>不能填寫未來日期</p>
                <p>• <strong>身高：</strong>不能為負數，且不能高於300公分</p>
                <p>• <strong>體重：</strong>不能為負數，且不能高於1000公斤</p>
                <p>• <strong>姓名：</strong>必填欄位，不能為空</p>
                
                <div style="margin-top: 20px; padding: 10px; background-color: #f0f8ff; border-radius: 4px; border-left: 4px solid #0066cc;">
                    <small style="color: #0066cc;"><strong>提示：</strong>如果輸入資料不符合限制條件，系統會顯示相對應的錯誤訊息</small>
                </div>
            </div>
        </div>
    </div>
}

<div class="patients-page">
    <div class="patients-list">
        @if (AppState.Patients is null || !AppState.Patients.Any())
        {
            <div class="empty-hint">目前沒有病人資料</div>
        }
        else
        {
            @foreach (var p in AppState.Patients)
            {
                <PatientCard Patient="p" />
            }
        }
    </div>
  
  <!-- 右側：新增病患表單 -->
  <div class="add-panel">
    <h3 class="panel-title">Add Patient</h3>

    <!-- 錯誤訊息顯示區域 - 支援多個錯誤 -->
    @if (errorMessages.Any())
    {
        <div class="error-messages" style="background-color: #fee; color: #c33; padding: 10px; margin-bottom: 15px; border-radius: 4px; border: 1px solid #fcc;">
            @foreach (var error in errorMessages)
            {
                <div class="error-item" style="margin-bottom: 5px;">• @error</div>
            }
        </div>
    }

    <div class="form-card">
      <div class="form-row">
        <label>Name:</label>
        <input @bind="draft.Name" placeholder="Full name" />
      </div>
      
      <div class="form-row">
        <label>Date of Birth:</label>
        <input type="date" 
               @bind="draft.DateOfBirth" 
               max="@maxDate"
               @oninput="CalculateAge" />
      </div>
      
      <div class="form-row">
        <label>Age:</label>
        <input type="number" 
               @bind="calculatedAge" 
               readonly 
               style="background-color: #f3f4f6;" />
      </div>
      
      <div class="form-row">
        <label>Gender:</label>
        <select @bind="draft.Gender">
          <option value="">Select…</option>
          <option>Male</option>
          <option>Female</option>
          <option>Other</option>
        </select>
      </div>
      
      <div class="form-row">
        <label>Blood Type:</label>
        <select @bind="draft.BloodType">
          <option value="">Select…</option>
          <option>A</option>
          <option>B</option>
          <option>O</option>
          <option>AB</option>
        </select>
      </div>
      
      <div class="form-row">
        <label>Height(cm):</label>
        <input type="number" step="0.1" max="300" @bind="draft.Height" placeholder="cm" />
      </div>
      
      <div class="form-row">
        <label>Weight(kg):</label>
        <input type="number" step="0.1" @bind="draft.Weight" placeholder="kg" />
      </div>
      
      <div class="actions">
        <button class="btn-add" @onclick="AddPatient">ADD</button>
      </div>
    </div>
  </div>
</div>

@code {
    private Patient draft = new();
    private string maxDate = DateTime.Today.ToString("yyyy-MM-dd");
    private int? calculatedAge;
    
    // 改為錯誤訊息列表，支援多個錯誤同時顯示
    private List<string> errorMessages = new();
    
    // 控制說明視窗顯示
    private bool showHelpModal = false;

    protected override void OnInitialized()
    {
        // 設定最大日期為今天
        maxDate = DateTime.Today.ToString("yyyy-MM-dd");
    }
    
    private void CalculateAge(ChangeEventArgs e)
    {
        if (DateTime.TryParse(e.Value?.ToString(), out var birthDate))
        {
            draft.DateOfBirth = birthDate;
            
            // 計算年齡
            var today = DateTime.Today;
            var age = today.Year - birthDate.Year;
            
            // 如果今年還沒過生日，年齡減1
            if (birthDate.Date > today.AddYears(-age))
            {
                age--;
            }
            
            calculatedAge = age;
            draft.Age = age;
        }
        else
        {
            calculatedAge = null;
            draft.Age = 0;
        }
    }
    
    private void ShowHelp()
    {
        showHelpModal = true;
    }
    
    private void HideHelp()
    {
        showHelpModal = false;
    }
    
    private void Logout()
    {
        draft = new();
        calculatedAge = null;
        errorMessages.Clear();
        showHelpModal = false; // 登出時也關閉說明視窗
        Nav.NavigateTo("/");
    }
    
    private void GoDetail(string id)
    {
        var url = $"/patients/{Uri.EscapeDataString(id)}";
        Nav.NavigateTo(url);
    }
    
    private void AddPatient()
    {
        // 清除之前的錯誤訊息
        errorMessages.Clear();
        
        // 收集所有錯誤
        if (string.IsNullOrWhiteSpace(draft.Name)) 
        {
            errorMessages.Add("請輸入病患姓名");
        }
        
        // 檢查日期是否有效且不是未來日期
        if (draft.DateOfBirth > DateTime.Today)
        {
            errorMessages.Add("出生日期不能是未來日期");
        }
        
        // 檢查身高限制
        if (draft.Height > 300)
        {
            errorMessages.Add("身高沒那麼高太離譜");
        }
        
        if (draft.Height < 0)
        {
            errorMessages.Add("身高不能為負數");
        }
        
        // 檢查體重限制
        if (draft.Weight < 0)
        {
            errorMessages.Add("體重不能為負數");
        }
        
        if (draft.Weight > 1000)
        {
            errorMessages.Add("體重不能超過1000公斤");
        }
        
        // 如果有任何錯誤，就不繼續執行
        if (errorMessages.Any())
        {
            return;
        }
        
        // 沒有錯誤的話，繼續原有的新增邏輯
        // 生成 PAT-年份-隨機4位數字 格式的ID
        var year = DateTime.Now.Year;
        var randomNumber = Random.Shared.Next(1000, 9999);
        draft.Id = $"PAT-{year}-{randomNumber}";
        
        // 根據性別設定照片
        draft.AvatarUrl = draft.Gender?.ToLower() switch
        {
            "male" => "images/病人_1.png",
            "female" => "images/病人_2.png",
            _ => "images/病人_1.png" // 預設使用男性照片
        };
        
        // 確保年齡已經設定
        if (calculatedAge.HasValue)
        {
            draft.Age = calculatedAge.Value;
        }
        
        AppState.Patients.Add(draft);
        
        // 清空表單和錯誤訊息
        draft = new();
        calculatedAge = null;
        errorMessages.Clear();
        StateHasChanged();
    }
}